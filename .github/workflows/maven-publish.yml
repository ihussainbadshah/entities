# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn clean -B package --file pom.xml
      
    - name: Publish to GitHub Packages Apache Maven
      run: mvn -DskipTests=true deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  check_sonar_configured:
    runs-on: ubuntu-latest
    steps:
      - name: check_sonar_configured
        run: |
          echo "Checking if sonar is configured: ${{ env.SONAR_CONFIGURED }}"
    env:
      SONAR_CONFIGURED: ${{ secrets.SONAR_TOKEN != '' }}
    outputs:
      sonar_configured: ${{ env.SONAR_CONFIGURED }}


  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4.1.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
          args:
            -Dsonar.projectKey=eclipse-ecsp_utils
            -Dsonar.organization=eclipse-ecsp
          projectBaseDir: .